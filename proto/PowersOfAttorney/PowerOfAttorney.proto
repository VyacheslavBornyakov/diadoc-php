import "Content_v3.proto";
import "Timestamp.proto";
import "User.proto";

package Diadoc.Api.Proto.PowersOfAttorney;

option java_outer_classname = "PowerOfAttorneyProtos";

message PowerOfAttorneyFullId {
    optional string RegistrationNumber = 1;
    optional string IssuerInn = 2;
    optional string RepresentativeInn = 3;
}

message PowerOfAttorney {
    optional PowerOfAttorneyFullId FullId = 1;
    optional PowerOfAttorneyIssuer Issuer = 2;
    optional PowerOfAttorneyConfidant Confidant = 3;
    optional Timestamp StartAt = 4;
    optional Timestamp ExpireAt = 5;
    optional string System = 6;
    optional string IdFile = 7;
    repeated PowerOfAttorney DelegationChain = 8;
    optional PowerOfAttorneyPermissionsInfo PermissionsInfo = 9;
    optional PowerOfAttorneyDelegationInfo DelegationInfo = 10;
    repeated PowerOfAttorneyRepresentative Representatives = 11;
}

message PowerOfAttorneyIssuer {
    optional PowerOfAttorneyIssuerType Type = 1 [default = UnknownIssuerType];
    optional PowerOfAttorneyIssuerLegalEntity LegalEntity = 2;
    optional PowerOfAttorneyIssuerForeignEntity ForeignEntity = 3;
    optional PowerOfAttorneyIssuerIndividualEntity IndividualEntity = 4;
    optional PowerOfAttorneyIssuerPhysicalEntity PhysicalEntity = 5;
}

enum PowerOfAttorneyIssuerType {
    UnknownIssuerType = 0;
    LegalEntity = 1;
    ForeignEntity = 2;
    IndividualEntity = 3;
    PhysicalEntity = 4;
}

message PowerOfAttorneyIssuerLegalEntity {
    optional string Inn = 1;
    optional string Kpp = 2;
    optional string OrganizationName = 3;
}

message PowerOfAttorneyIssuerForeignEntity {
    optional string Inn = 1;
    optional string Kpp = 2;
    optional string OrganizationName = 3;
}

message PowerOfAttorneyIssuerIndividualEntity {
    optional string Inn = 1;
    optional string OrganizationName = 3;
}

message PowerOfAttorneyIssuerPhysicalEntity {
    optional string Inn = 1;
    optional FullName PersonName = 2;
}

message PowerOfAttorneyConfidant {
    optional FullName PersonName = 1;
    optional string Inn = 2;
    optional PowerOfAttorneyConfidantOrganization Organization = 3;
}

message PowerOfAttorneyConfidantOrganization {
    optional string Inn = 1;
    optional string Kpp = 2;
    optional string Name = 3;
}

message PowerOfAttorneyPermissionsInfo {
    repeated PowerOfAttorneyPermissions Permissions = 1;
    optional string TransferPermissionLoss = 2;
    optional string JointPermissions = 3;
}

message PowerOfAttorneyPermissions {
    optional string Type = 1;
    optional string TextPermission = 2;
    repeated PowerOfAttorneyMachineReadablePermission MachineReadablePermission = 3;
}

message PowerOfAttorneyMachineReadablePermission {
    optional string Mnemonic = 1;
    optional string Code = 2;
    optional string Name = 3;
    repeated PowerOfAttorneyRestrictions Restrictions = 4;
}

message PowerOfAttorneyRestrictions {
    optional int32 Id = 1;
    optional string Code = 2;
    optional string Name = 3;
    optional string ValueName = 4;
    optional string ValueCode = 5;
    optional string ValueText = 6;
}

message PowerOfAttorneyToRegister {
    optional PowerOfAttorneyFullId FullId = 1;
    optional PowerOfAttorneySignedContent Content = 2;
}

message PowerOfAttorneySignedContent {
    optional Content_v3 Content = 1;
    optional Content_v3 Signature = 2;
}

message PowerOfAttorneyRegisterResult {
    optional string OperationStatus = 1;
    optional PowerOfAttorney PowerOfAttorney = 2;
    optional PowerOfAttorneyStatus Status = 3;
    repeated PowerOfAttorneyOperationError Errors = 4;
}

message PowerOfAttorneyStatus {
    optional string Status = 1;
    optional Timestamp LastCheckAt = 2;
}

message PowerOfAttorneyOperationError {
    optional string Code = 1;
    optional string Text = 2;
}

enum PowerOfAttorneySendingType {
    Unknown = 0;
    Metadata = 1;
    File = 2;
    DocumentContent = 3;
}

message PowerOfAttorneyDelegationInfo {
	optional string RootRegistrationNumber = 1;
	optional string ParentRegistrationNumber = 2;
	repeated PowerOfAttorneyIssuer RootIssuers = 3;
}

message PowerOfAttorneyContent {
    optional bytes Content = 1;
    optional bytes Signature = 2;
}

message PowerOfAttorneyContentResponse {
    optional PowerOfAttorneyContentV2 Content = 1;
    repeated PowerOfAttorneyContentV2 DelegationChain = 2;
}

message PowerOfAttorneyContentV2 {
    optional bytes Content = 1;
    optional bytes Signature = 2;
    optional PowerOfAttorneyFullId FullId = 3;
}

message PowerOfAttorneyRepresentative {
  optional PowerOfAttorneyRepresentativeType Type = 1 [default = UnknownRepresentativeType];
  optional PowerOfAttorneyRepresentativeLegalEntity LegalEntity = 2;
  optional PowerOfAttorneyRepresentativeIndividualEntity IndividualEntity = 3;
  optional PowerOfAttorneyRepresentativePhysicalEntity PhysicalEntity = 4;
  optional PowerOfAttorneyRepresentativeLegalEntity LegalSubsidiaryEntity = 5;
  optional PowerOfAttorneyRepresentativeForeignLegalSubsidiaryEntity ForeignLegalSubsidiaryEntity = 6;
 }

enum PowerOfAttorneyRepresentativeType {
    UnknownRepresentativeType = 0;
    RepresentativeLegalEntity = 1;
    RepresentativeIndividualEntity = 2;
    RepresentativePhysicalEntity = 3;
    RepresentativeLegalSubsidiaryEntity = 4;
    RepresentativeForeignLegalSubsidiaryEntity = 5;
 }

message PowerOfAttorneyRepresentativeLegalEntity  {
    optional string Inn = 1;
    optional string Kpp = 2;
    optional string OrganizationName = 3;
    repeated PowerOfAttorneyRepresentativePhysicalEntity PhysicalEntity = 4;
}

message PowerOfAttorneyRepresentativeIndividualEntity {
    optional string Inn = 1;
    optional string OrganizationName = 2;
  }

message PowerOfAttorneyRepresentativePhysicalEntity {
   optional string Inn = 1;
   optional FullName PersonName = 2;
}

message PowerOfAttorneyRepresentativeForeignLegalSubsidiaryEntity {
    optional string Inn = 1;
    optional string Kpp = 2;
    optional string OrganizationName = 3;
}
