///////////////////////////////////////////////////////////////////////////////
// Протобуферы для пишущих методов API:
//	PostMessage(MessageToPost message) : Message
//	PostMessagePatch(MessagePatchToPost messagePatch) : MessagePatch

import "DocumentId.proto";
import "LockMode.proto";
import "CustomDataItem.proto";
import "ResolutionRequestType.proto";
import "ResolutionType.proto";
import "Invoicing/Signer.proto";
import "Invoicing/ExtendedSigner.proto";
import "Events/ResolutionInfo.proto";
import "Events/ResolutionRequestInfo.proto";
import "Invoicing/OrganizationInfo.proto";
import "Docflow/DocumentInfo.proto";
import "Events/PowerOfAttorneyToPost.proto";

package Diadoc.Api.Proto.Events;

option java_outer_classname = "DiadocMessage_PostApiProtos";

message MessageToPost {
	optional string FromBoxId = 1;
	optional string ToBoxId = 2;
	repeated XmlDocumentAttachment Invoices = 3;
	repeated NonformalizedAttachment NonformalizedDocuments = 4;
	repeated BasicDocumentAttachment Torg12Documents = 5;
	repeated AcceptanceCertificateAttachment AcceptanceCertificates = 7;
	repeated StructuredDataAttachment StructuredDataAttachments = 8;
	repeated BasicDocumentAttachment ProformaInvoices = 9;
	repeated XmlDocumentAttachment XmlTorg12SellerTitles = 10;
	repeated XmlDocumentAttachment XmlAcceptanceCertificateSellerTitles = 11;
	optional string ToDepartmentId = 12;
	optional bool IsDraft = 13 [default = false];
	optional bool LockDraft = 14 [default = false];
	optional bool StrictDraftValidation = 15 [default = true];
	optional bool IsInternal = 16 [default = false];
	optional string FromDepartmentId = 17;
	optional bool DelaySend = 18 [default = false];
	repeated PriceListAttachment PriceLists = 19;
	repeated NonformalizedAttachment PriceListAgreements = 20;
	repeated NonformalizedAttachment CertificateRegistries = 21;
	repeated ReconciliationActAttachment ReconciliationActs = 22;
	repeated ContractAttachment Contracts = 23;
	repeated Torg13Attachment Torg13Documents = 24;
	repeated ServiceDetailsAttachment ServiceDetailsDocuments = 25;
	optional string ProxyBoxId = 26;
	optional string ProxyDepartmentId = 27;
	repeated EncryptedInvoiceAttachment EncryptedInvoices = 28;
	repeated EncryptedXmlDocumentAttachment EncryptedXmlTorg12SellerTitles = 29;
	repeated EncryptedXmlDocumentAttachment EncryptedXmlAcceptanceCertificateSellerTitles = 30;
	repeated SupplementaryAgreementAttachment SupplementaryAgreements = 31;
	optional bool LockPacket = 32 [default = false];
	repeated XmlDocumentAttachment UniversalTransferDocumentSellerTitles = 33;
	repeated DocumentAttachment DocumentAttachments = 34;
	optional LockMode LockMode = 35 [default = None];
}

message EncryptedXmlDocumentAttachment {
	optional SignedContent SignedContent = 1;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	repeated CustomDataItem CustomData = 7;
	optional EncryptedDocumentMetadata Metadata = 8;
	optional EncryptedXmlBasicDocumentMetadata XmlBasicMetadata = 9;
}

message EncryptedInvoiceAttachment {
	optional SignedContent SignedContent = 1;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	repeated CustomDataItem CustomData = 7;
	optional EncryptedDocumentMetadata Metadata = 8;
	optional EncryptedInvoiceMetadata InvoiceMetadata = 9;
	optional EncryptedInvoiceCorrectionMetadata InvoiceCorrectionMetadata = 10;
}

message EncryptedDocumentMetadata {
	optional string FileId = 1;
	optional string BuyerFnsParticipantId = 2;
	optional string SenderFnsParticipantId = 3;
	optional Docflow.DocumentDateAndNumber DocumentDateAndNumber = 4;
}

message EncryptedXmlBasicDocumentMetadata {
	optional string FormationDate = 1;
	optional string FormationTime = 2;
	optional string DocumentName = 3;
}

message EncryptedInvoiceMetadata {
	optional Docflow.DocumentDateAndNumber RevisionDateAndNumber = 1;
}

message EncryptedInvoiceCorrectionMetadata {
	optional Docflow.DocumentDateAndNumber OriginalInvoiceDateAndNumber = 1;
	optional Docflow.DocumentDateAndNumber OriginalInvoiceRevisionDateAndNumber = 2;
	optional Docflow.DocumentDateAndNumber InvoiceCorrectionRevisionDateAndNumber = 3;
}

message XmlDocumentAttachment {
	optional SignedContent SignedContent = 1;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	optional bool NeedReceipt = 7 [default = false];
	repeated CustomDataItem CustomData = 8;
}

message NonformalizedAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	optional bool NeedRecipientSignature = 4 [default = false];
	repeated DocumentId InitialDocumentIds = 5;
	repeated DocumentId SubordinateDocumentIds = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8;
	optional string CustomDocumentId = 9;
	optional bool NeedReceipt = 10 [default = false];
	repeated CustomDataItem CustomData = 11;
}

message BasicDocumentAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string DocumentDate = 6;
	optional string DocumentNumber = 7;
	optional string Total = 8;
	optional string CustomDocumentId = 9;
	optional string Vat = 10;
	optional string Grounds = 11;
	optional bool NeedReceipt = 12 [default = false];
	repeated CustomDataItem CustomData = 13;
}

message Torg13Attachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string DocumentDate = 6;
	optional string DocumentNumber = 7;
	optional string Total = 8;
	optional string CustomDocumentId = 9;
	// reserved 10 for Vat
	optional string Grounds = 11;
	optional bool NeedReceipt = 12 [default = false];
	repeated CustomDataItem CustomData = 13;
}

message AcceptanceCertificateAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string DocumentDate = 6;
	optional string DocumentNumber = 7 [default=""];
	optional string Total = 8;
	optional string CustomDocumentId = 9;
	optional string Vat = 10;
	optional string Grounds = 11;
	optional bool NeedReceipt = 12 [default = false];
	optional bool NeedRecipientSignature = 13 [default = true];
	repeated CustomDataItem CustomData = 14;
}

message TrustConnectionRequestAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	optional string CustomDocumentId = 4;
	repeated CustomDataItem CustomData = 5;
}

message StructuredDataAttachment {
	optional bytes Content = 1;
	optional string FileName = 2;
	optional string ParentCustomDocumentId = 3;
}

message PriceListAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8;
	optional string PriceListEffectiveDate = 9;
	optional string ContractDocumentDate = 10;
	optional string ContractDocumentNumber = 11;
	optional bool NeedReceipt = 12 [default = false];
	repeated CustomDataItem CustomData = 13;
}

message ReconciliationActAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	// reserved 4 for NeedRecipientSignature
	repeated DocumentId InitialDocumentIds = 5;
	repeated DocumentId SubordinateDocumentIds = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8 [default = ""];
	optional string CustomDocumentId = 9;
	optional bool NeedReceipt = 10 [default = false];
	repeated CustomDataItem CustomData = 11;
}

message ContractAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8;
	optional string ContractPrice = 9;
	optional string ContractType = 10;
	optional bool NeedReceipt = 11 [default = false];
	repeated CustomDataItem CustomData = 12;
}

message SupplementaryAgreementAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	repeated DocumentId InitialDocumentIds = 4;
	repeated DocumentId SubordinateDocumentIds = 5;
	optional string CustomDocumentId = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8;
	optional string Total = 9;
	optional string ContractNumber = 10;
	optional string ContractDate = 11;
	optional string ContractType = 12;
	optional bool NeedReceipt = 13 [default = false];
	repeated CustomDataItem CustomData = 14;
}

message ServiceDetailsAttachment {
	optional SignedContent SignedContent = 1;
	optional string FileName = 2;
	optional string Comment = 3;
	// reserved 4 for NeedRecipientSignature
	repeated DocumentId InitialDocumentIds = 5;
	repeated DocumentId SubordinateDocumentIds = 6;
	optional string DocumentDate = 7;
	optional string DocumentNumber = 8;
	optional string CustomDocumentId = 9;
	optional bool NeedReceipt = 10 [default = false];
	repeated CustomDataItem CustomData = 11;
}

message DocumentAttachment {
	optional SignedContent SignedContent = 1;
	// reserved 2 for FileName
	optional string Comment = 3;
	optional bool NeedRecipientSignature = 4 [default = false];
	repeated DocumentId InitialDocumentIds = 5;
	repeated DocumentId SubordinateDocumentIds = 6;
	// reserved 7 for DocumentDate
	// reserved 8 for DocumentNumber
	optional string CustomDocumentId = 9;
	optional bool NeedReceipt = 10 [default = false];
	repeated CustomDataItem CustomData = 11;
	optional string TypeNamedId = 12;
	optional string Function = 13;
	optional string Version = 14;
	repeated MetadataItem Metadata = 15;
	optional int32 WorkflowId = 16;
	optional bool IsEncrypted = 17 [default = false];
	optional string EditingSettingId = 18;
}

message MetadataItem {
	optional string Key = 1;
	optional string Value = 2;
}

message MessagePatchToPost {
	optional string BoxId = 1;
	optional string MessageId = 2;
	repeated ReceiptAttachment Receipts = 3;
	repeated CorrectionRequestAttachment CorrectionRequests = 4;
	repeated DocumentSignature Signatures = 5;
	repeated RequestedSignatureRejection RequestedSignatureRejections = 6;
	repeated RecipientTitleAttachment XmlTorg12BuyerTitles = 7;
	repeated RecipientTitleAttachment XmlAcceptanceCertificateBuyerTitles = 8;
	repeated ResolutionAttachment Resolutions = 9;
	repeated ResolutionRequestAttachment ResolutionRequests = 10;
	repeated ResolutionRequestCancellationAttachment ResolutionRequestCancellations = 11;
	repeated ResolutionRequestDenialAttachment ResolutionRequestDenials = 12;
	repeated ResolutionRequestDenialCancellationAttachment ResolutionRequestDenialCancellations = 13;
	repeated RevocationRequestAttachment RevocationRequests = 14;
	repeated XmlSignatureRejectionAttachment XmlSignatureRejections = 15;
	repeated CustomDataPatch CustomDataPatches = 16;
	repeated ResolutionRouteAssignment ResolutionRouteAssignments = 17;
	repeated SignatureVerification SignatureVerifications = 18;
	repeated EditDocumentPacketCommand EditDocumentPacketCommands = 19;
	repeated RecipientTitleAttachment UniversalTransferDocumentBuyerTitles = 20;
	repeated ResolutionRouteRemoval ResolutionRouteRemovals = 21;
	repeated RecipientTitleAttachment RecipientTitles = 22;
	repeated EditingPatch EditingPatches = 24;
}

message EditingPatch {
	optional string ParentEntityId = 1;
	optional UnsignedContent Content = 2;
	repeated string Labels = 3;
}

message SignatureVerification {
	optional string InitialDocumentId = 1;
	optional bool IsValid = 2;
	optional string ErrorMessage = 3;
	repeated string Labels = 4;
}

message ResolutionRequestAttachment {
	optional string InitialDocumentId = 1;
	optional ResolutionRequestType Type = 2;
	optional string TargetUserId = 3;
	optional string TargetDepartmentId = 4;
	optional string Comment = 5;
	repeated string Labels = 6;
}

message ResolutionRouteAssignment
{
	optional string InitialDocumentId = 1;
	optional string RouteId = 2;
	optional string Comment = 3;
	repeated string Labels = 4;
}

message ResolutionRequestCancellationAttachment {
	optional string InitialResolutionRequestId = 1;
	optional string Comment = 2;
	repeated string Labels = 3;
}

message ResolutionRequestDenialCancellationAttachment {
	optional string InitialResolutionRequestDenialId = 1;
}

message ResolutionRequestDenialAttachment {
	optional string InitialResolutionRequestId = 1;
	optional string Comment = 2;
	repeated string Labels = 3;
}

message ResolutionAttachment {
	optional string InitialDocumentId = 1;
	optional ResolutionType ResolutionType = 2;
	optional string Comment = 3;
	repeated string Labels = 4;
}

message ReceiptAttachment {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	// do not use field #3
	repeated string Labels = 4;
}

message RecipientTitleAttachment {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	repeated string Labels = 4;
	optional bool NeedReceipt = 5 [default = false];
}

message CorrectionRequestAttachment {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	// do not use field #3
	repeated string Labels = 4;
}

message DocumentSignature {
	optional string ParentEntityId = 1;
	optional bytes Signature = 2;
	optional bool SignWithTestSignature = 4 [default = false];
	optional bool IsApprovementSignature = 5 [default = false];
	optional string SignatureNameOnShelf = 6;
	optional string PatchedContentId = 7;
	repeated string Labels = 8;
	optional PowerOfAttorneyToPost PowerOfAttorney = 9;
}

message DocumentSenderSignature {
	optional string ParentEntityId = 1;
	optional bytes Signature = 2;
	optional bool SignWithTestSignature = 4 [default = false];
	optional string PatchedContentId = 5;
	optional PowerOfAttorneyToPost PowerOfAttorney = 6;
}

message RequestedSignatureRejection {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	repeated string Labels = 3;
}

message SignedContent {
	optional bytes Content = 1;
	optional bytes Signature = 2;
	optional string NameOnShelf = 4;
	optional bool SignWithTestSignature = 5 [default = false];
	optional string SignatureNameOnShelf = 6;
	optional PowerOfAttorneyToPost PowerOfAttorney = 7;
}

message DraftToSend {
	optional string BoxId = 1;
	optional string DraftId = 2;
	optional string ToBoxId = 3;
	optional string ToDepartmentId = 4;
	repeated DocumentSenderSignature DocumentSignatures = 5;
	optional string ProxyBoxId = 6;
	optional string ProxyDepartmentId = 7;
}

message PrepareDocumentsToSignRequest {
	optional string BoxId = 1;
	repeated DraftDocumentToPatch DraftDocuments = 2;
	repeated DocumentToPatch Documents = 3;
	repeated ContentToPatch Contents = 4;
}

message DraftDocumentToPatch {
	optional DocumentId DocumentId = 1;
	optional string ToBoxId = 2;
	optional Invoicing.Signer Signer = 3;
	repeated Invoicing.Signers.ExtendedSigner ExtendedSigner = 4;
	optional bytes SignerContent = 5;
}

message ContentToPatch {
	optional string TypeNamedId = 1;
	optional string Function = 2;
	optional string Version = 3;
	optional UnsignedContent Content = 4;
	optional string ToBoxId = 5;
	optional Invoicing.Signer Signer = 6;
	repeated Invoicing.Signers.ExtendedSigner ExtendedSigner = 7;
	optional bytes SignerContent = 8;
}

message DocumentToPatch {
	optional DocumentId DocumentId = 1;
	optional Invoicing.Signer Signer = 2;
	repeated Invoicing.Signers.ExtendedSigner ExtendedSigner = 3;
	optional bytes SignerContent = 4;
}

message DocumentPatchedContent {
	optional DocumentId DocumentId = 1;
	optional string PatchedContentId = 2;
	optional bytes Content = 3;
}

message PrepareDocumentsToSignResponse {
	repeated DocumentPatchedContent DocumentPatchedContents = 1;
}

message MessageToSend {
	optional string BoxId = 1;
	optional string MessageId = 2;
	repeated DocumentSignature DocumentSignatures = 3;
}

message RevocationRequestAttachment {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	repeated string Labels = 3;
}

message XmlSignatureRejectionAttachment {
	optional string ParentEntityId = 1;
	optional SignedContent SignedContent = 2;
	repeated string Labels = 3;
}

message RoamingNotificationToPost {
	optional string BoxId = 1;
	optional string EventId = 2;
	optional bool Success = 3;
	optional string Description = 4;
	optional string MessageId = 5;
	repeated string NotifiableEntityIds = 6;
}

enum CustomDataPatchOperation {
	Set = 0;
	Remove = 1;
}

message CustomDataPatch {
	optional string ParentEntityId = 1;
	optional CustomDataPatchOperation Operation = 2;
	optional string Key = 3;
	optional string Value = 4;
}

message EditDocumentPacketCommand {
	optional string DocumentId = 1;
	repeated DocumentId AddDocumentsToPacket = 2;
	repeated DocumentId RemoveDocumentsFromPacket = 3;
}

message ResolutionRouteRemoval {
	optional string ParentEntityId = 1; // EntityId документа, который нужно снять с маршрута согласования
	optional string RouteId = 2; // Идентификатор маршрута, с которого нужно снять документ
	optional string Comment = 3 [default = ""]; // Текстовый комментарий, ограничение - 256 символов
	repeated string Labels = 4;
}

message TemplateToPost {
	optional string FromBoxId = 1;
	optional string ToBoxId = 2;
	optional string MessageFromBoxId = 3;
	optional string MessageToBoxId = 4;
	optional string MessageToDepartmentId = 5;
	repeated TemplateDocumentAttachment DocumentAttachments = 6;
	optional LockMode LockMode = 7 [default = None];
	optional string FromDepartmentId = 8;
	optional string ToDepartmentId = 9;
	optional string MessageProxyBoxId = 10;
	optional string MessageProxyDepartmentId = 11;
	optional bool IsReusable = 12 [default = false];
}

message TemplateDocumentAttachment {
	optional UnsignedContent UnsignedContent = 1;
	optional string Comment = 2;
	optional string TypeNamedId = 3;
	optional string Function = 4;
	optional string Version = 5;
	repeated MetadataItem Metadata = 6;
	optional int32 WorkflowId = 7;
	optional string CustomDocumentId = 8;
	optional string EditingSettingId = 9;
	optional bool NeedRecipientSignature = 10 [default = false];
	optional PredefinedRecipientTitle PredefinedRecipientTitle = 11;
	optional bool RefusalDisabled = 12 [default = false];
	repeated CustomDataItem CustomData = 13;
}

message TemplatePatchToPost {
	repeated TemplateRefusalAttachment Refusals = 1;
}

message TemplateRefusalAttachment {
	optional string DocumentId = 1;
	optional string Comment = 2;
	repeated string Labels = 3;
}

message PredefinedRecipientTitle {
	optional UnsignedContent UnsignedContent = 1;
}

message UnsignedContent {
	optional bytes Content = 1;
	optional string NameOnShelf = 2;
}

message TemplateTransformationToPost {
	optional string BoxId = 1;
	optional string TemplateId = 2;
	repeated DocumentTransformation DocumentTransformations = 3;
}

message DocumentTransformation {
	optional string DocumentId = 1;
	optional string CustomDocumentId = 2;
}