<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: OuterDocflows/OuterDocflow.proto

namespace Diadoc\Proto\OuterDocflows;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.OuterDocflows.OuterDocflowInfo</code>
 */
class OuterDocflowInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string DocflowNamedId = 1;</code>
     */
    protected $DocflowNamedId = null;
    /**
     * Generated from protobuf field <code>optional string DocflowFriendlyName = 2;</code>
     */
    protected $DocflowFriendlyName = null;
    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.OuterDocflows.Status Status = 3;</code>
     */
    protected $Status = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $DocflowNamedId
     *     @type string $DocflowFriendlyName
     *     @type \Diadoc\Api\Proto\OuterDocflows\Status $Status
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\OuterDocflows\OuterDocflow::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string DocflowNamedId = 1;</code>
     * @return string
     */
    public function getDocflowNamedId()
    {
        return isset($this->DocflowNamedId) ? $this->DocflowNamedId : '';
    }

    public function hasDocflowNamedId()
    {
        return isset($this->DocflowNamedId);
    }

    public function clearDocflowNamedId()
    {
        unset($this->DocflowNamedId);
    }

    /**
     * Generated from protobuf field <code>optional string DocflowNamedId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDocflowNamedId($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocflowNamedId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string DocflowFriendlyName = 2;</code>
     * @return string
     */
    public function getDocflowFriendlyName()
    {
        return isset($this->DocflowFriendlyName) ? $this->DocflowFriendlyName : '';
    }

    public function hasDocflowFriendlyName()
    {
        return isset($this->DocflowFriendlyName);
    }

    public function clearDocflowFriendlyName()
    {
        unset($this->DocflowFriendlyName);
    }

    /**
     * Generated from protobuf field <code>optional string DocflowFriendlyName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDocflowFriendlyName($var)
    {
        GPBUtil::checkString($var, True);
        $this->DocflowFriendlyName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.OuterDocflows.Status Status = 3;</code>
     * @return \Diadoc\Api\Proto\OuterDocflows\Status|null
     */
    public function getStatus()
    {
        return $this->Status;
    }

    public function hasStatus()
    {
        return isset($this->Status);
    }

    public function clearStatus()
    {
        unset($this->Status);
    }

    /**
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.OuterDocflows.Status Status = 3;</code>
     * @param \Diadoc\Api\Proto\OuterDocflows\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\OuterDocflows\Status::class);
        $this->Status = $var;

        return $this;
    }

}

