<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: Invoicing/OrganizationInfo.proto

namespace Diadoc\Api\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Invoicing.OrganizationInfo</code>
 */
class OrganizationInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * название
     *
     * Generated from protobuf field <code>optional string Name = 1;</code>
     */
    protected $Name = null;
    /**
     * ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 2;</code>
     */
    protected $Inn = null;
    /**
     * КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 3;</code>
     */
    protected $Kpp = null;
    /**
     * адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 4;</code>
     */
    protected $Address = null;
    /**
     * организация - это ИП
     *
     * Generated from protobuf field <code>optional bool IsSoleProprietor = 5 [default = false];</code>
     */
    protected $IsSoleProprietor = null;
    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 6;</code>
     */
    protected $Okopf = null;
    /**
     * код в общероссийском классификаторе предприятий и организаций
     *
     * Generated from protobuf field <code>optional string Okpo = 7;</code>
     */
    protected $Okpo = null;
    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 8;</code>
     */
    protected $Okdp = null;
    /**
     * телефон
     *
     * Generated from protobuf field <code>optional string Phone = 9;</code>
     */
    protected $Phone = null;
    /**
     * факс
     *
     * Generated from protobuf field <code>optional string Fax = 10;</code>
     */
    protected $Fax = null;
    /**
     * номер банковского счета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 11;</code>
     */
    protected $BankAccountNumber = null;
    /**
     * название банка
     *
     * Generated from protobuf field <code>optional string BankName = 12;</code>
     */
    protected $BankName = null;
    /**
     * БИК
     *
     * Generated from protobuf field <code>optional string BankId = 13;</code>
     */
    protected $BankId = null;
    /**
     * структурное подразделение
     *
     * Generated from protobuf field <code>optional string Department = 14;</code>
     */
    protected $Department = null;
    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 15;</code>
     */
    protected $FnsParticipantId = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Name
     *           название
     *     @type string $Inn
     *           ИНН
     *     @type string $Kpp
     *           КПП
     *     @type \Diadoc\Api\Proto\Address $Address
     *           адрес
     *     @type bool $IsSoleProprietor
     *           организация - это ИП
     *     @type string $Okopf
     *           код организационно-правовой формы по ОКОПФ
     *     @type string $Okpo
     *           код в общероссийском классификаторе предприятий и организаций
     *     @type string $Okdp
     *           код основного вида деятельности по ОКДП
     *     @type string $Phone
     *           телефон
     *     @type string $Fax
     *           факс
     *     @type string $BankAccountNumber
     *           номер банковского счета
     *     @type string $BankName
     *           название банка
     *     @type string $BankId
     *           БИК
     *     @type string $Department
     *           структурное подразделение
     *     @type string $FnsParticipantId
     *           идентификатор участника ЭДО
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\OrganizationInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * название
     *
     * Generated from protobuf field <code>optional string Name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->Name) ? $this->Name : '';
    }

    public function hasName()
    {
        return isset($this->Name);
    }

    public function clearName()
    {
        unset($this->Name);
    }

    /**
     * название
     *
     * Generated from protobuf field <code>optional string Name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->Name = $var;

        return $this;
    }

    /**
     * ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 2;</code>
     * @return string
     */
    public function getInn()
    {
        return isset($this->Inn) ? $this->Inn : '';
    }

    public function hasInn()
    {
        return isset($this->Inn);
    }

    public function clearInn()
    {
        unset($this->Inn);
    }

    /**
     * ИНН
     *
     * Generated from protobuf field <code>optional string Inn = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInn($var)
    {
        GPBUtil::checkString($var, True);
        $this->Inn = $var;

        return $this;
    }

    /**
     * КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 3;</code>
     * @return string
     */
    public function getKpp()
    {
        return isset($this->Kpp) ? $this->Kpp : '';
    }

    public function hasKpp()
    {
        return isset($this->Kpp);
    }

    public function clearKpp()
    {
        unset($this->Kpp);
    }

    /**
     * КПП
     *
     * Generated from protobuf field <code>optional string Kpp = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKpp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Kpp = $var;

        return $this;
    }

    /**
     * адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 4;</code>
     * @return \Diadoc\Api\Proto\Address|null
     */
    public function getAddress()
    {
        return $this->Address;
    }

    public function hasAddress()
    {
        return isset($this->Address);
    }

    public function clearAddress()
    {
        unset($this->Address);
    }

    /**
     * адрес
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Address Address = 4;</code>
     * @param \Diadoc\Api\Proto\Address $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Api\Proto\Address::class);
        $this->Address = $var;

        return $this;
    }

    /**
     * организация - это ИП
     *
     * Generated from protobuf field <code>optional bool IsSoleProprietor = 5 [default = false];</code>
     * @return bool
     */
    public function getIsSoleProprietor()
    {
        return isset($this->IsSoleProprietor) ? $this->IsSoleProprietor : false;
    }

    public function hasIsSoleProprietor()
    {
        return isset($this->IsSoleProprietor);
    }

    public function clearIsSoleProprietor()
    {
        unset($this->IsSoleProprietor);
    }

    /**
     * организация - это ИП
     *
     * Generated from protobuf field <code>optional bool IsSoleProprietor = 5 [default = false];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsSoleProprietor($var)
    {
        GPBUtil::checkBool($var);
        $this->IsSoleProprietor = $var;

        return $this;
    }

    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 6;</code>
     * @return string
     */
    public function getOkopf()
    {
        return isset($this->Okopf) ? $this->Okopf : '';
    }

    public function hasOkopf()
    {
        return isset($this->Okopf);
    }

    public function clearOkopf()
    {
        unset($this->Okopf);
    }

    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>optional string Okopf = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setOkopf($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okopf = $var;

        return $this;
    }

    /**
     * код в общероссийском классификаторе предприятий и организаций
     *
     * Generated from protobuf field <code>optional string Okpo = 7;</code>
     * @return string
     */
    public function getOkpo()
    {
        return isset($this->Okpo) ? $this->Okpo : '';
    }

    public function hasOkpo()
    {
        return isset($this->Okpo);
    }

    public function clearOkpo()
    {
        unset($this->Okpo);
    }

    /**
     * код в общероссийском классификаторе предприятий и организаций
     *
     * Generated from protobuf field <code>optional string Okpo = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setOkpo($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okpo = $var;

        return $this;
    }

    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 8;</code>
     * @return string
     */
    public function getOkdp()
    {
        return isset($this->Okdp) ? $this->Okdp : '';
    }

    public function hasOkdp()
    {
        return isset($this->Okdp);
    }

    public function clearOkdp()
    {
        unset($this->Okdp);
    }

    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>optional string Okdp = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setOkdp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okdp = $var;

        return $this;
    }

    /**
     * телефон
     *
     * Generated from protobuf field <code>optional string Phone = 9;</code>
     * @return string
     */
    public function getPhone()
    {
        return isset($this->Phone) ? $this->Phone : '';
    }

    public function hasPhone()
    {
        return isset($this->Phone);
    }

    public function clearPhone()
    {
        unset($this->Phone);
    }

    /**
     * телефон
     *
     * Generated from protobuf field <code>optional string Phone = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setPhone($var)
    {
        GPBUtil::checkString($var, True);
        $this->Phone = $var;

        return $this;
    }

    /**
     * факс
     *
     * Generated from protobuf field <code>optional string Fax = 10;</code>
     * @return string
     */
    public function getFax()
    {
        return isset($this->Fax) ? $this->Fax : '';
    }

    public function hasFax()
    {
        return isset($this->Fax);
    }

    public function clearFax()
    {
        unset($this->Fax);
    }

    /**
     * факс
     *
     * Generated from protobuf field <code>optional string Fax = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setFax($var)
    {
        GPBUtil::checkString($var, True);
        $this->Fax = $var;

        return $this;
    }

    /**
     * номер банковского счета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 11;</code>
     * @return string
     */
    public function getBankAccountNumber()
    {
        return isset($this->BankAccountNumber) ? $this->BankAccountNumber : '';
    }

    public function hasBankAccountNumber()
    {
        return isset($this->BankAccountNumber);
    }

    public function clearBankAccountNumber()
    {
        unset($this->BankAccountNumber);
    }

    /**
     * номер банковского счета
     *
     * Generated from protobuf field <code>optional string BankAccountNumber = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setBankAccountNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankAccountNumber = $var;

        return $this;
    }

    /**
     * название банка
     *
     * Generated from protobuf field <code>optional string BankName = 12;</code>
     * @return string
     */
    public function getBankName()
    {
        return isset($this->BankName) ? $this->BankName : '';
    }

    public function hasBankName()
    {
        return isset($this->BankName);
    }

    public function clearBankName()
    {
        unset($this->BankName);
    }

    /**
     * название банка
     *
     * Generated from protobuf field <code>optional string BankName = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setBankName($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankName = $var;

        return $this;
    }

    /**
     * БИК
     *
     * Generated from protobuf field <code>optional string BankId = 13;</code>
     * @return string
     */
    public function getBankId()
    {
        return isset($this->BankId) ? $this->BankId : '';
    }

    public function hasBankId()
    {
        return isset($this->BankId);
    }

    public function clearBankId()
    {
        unset($this->BankId);
    }

    /**
     * БИК
     *
     * Generated from protobuf field <code>optional string BankId = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setBankId($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankId = $var;

        return $this;
    }

    /**
     * структурное подразделение
     *
     * Generated from protobuf field <code>optional string Department = 14;</code>
     * @return string
     */
    public function getDepartment()
    {
        return isset($this->Department) ? $this->Department : '';
    }

    public function hasDepartment()
    {
        return isset($this->Department);
    }

    public function clearDepartment()
    {
        unset($this->Department);
    }

    /**
     * структурное подразделение
     *
     * Generated from protobuf field <code>optional string Department = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setDepartment($var)
    {
        GPBUtil::checkString($var, True);
        $this->Department = $var;

        return $this;
    }

    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 15;</code>
     * @return string
     */
    public function getFnsParticipantId()
    {
        return isset($this->FnsParticipantId) ? $this->FnsParticipantId : '';
    }

    public function hasFnsParticipantId()
    {
        return isset($this->FnsParticipantId);
    }

    public function clearFnsParticipantId()
    {
        unset($this->FnsParticipantId);
    }

    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>optional string FnsParticipantId = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setFnsParticipantId($var)
    {
        GPBUtil::checkString($var, True);
        $this->FnsParticipantId = $var;

        return $this;
    }

}

