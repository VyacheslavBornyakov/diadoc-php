<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: Invoicing/TovTorgInfo.proto

namespace Diadoc\Api\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Api.Proto.Invoicing.TovTorgItem</code>
 */
class TovTorgItem extends \Google\Protobuf\Internal\Message
{
    /**
     * наименование товара // НаимТов
     *
     * Generated from protobuf field <code>optional string Product = 1;</code>
     */
    protected $Product = null;
    /**
     * характеристика товара // ХарактерТов
     *
     * Generated from protobuf field <code>optional string Feature = 2;</code>
     */
    protected $Feature = null;
    /**
     * сорт товара // СортТов
     *
     * Generated from protobuf field <code>optional string Sort = 3;</code>
     */
    protected $Sort = null;
    /**
     * артикул товара
     *
     * Generated from protobuf field <code>optional string VendorCode = 4;</code>
     */
    protected $VendorCode = null;
    /**
     * Код товара // КодТов
     *
     * Generated from protobuf field <code>optional string ProductCode = 5;</code>
     */
    protected $ProductCode = null;
    /**
     * наименование единицы измерения товара. Пользователь заполняет, если ОКЕИ_Тов=’0000’// НаимЕдИзм
     *
     * Generated from protobuf field <code>optional string UnitName = 6;</code>
     */
    protected $UnitName = null;
    /**
     * единицы измерения товара (код) // ОКЕИ_Тов
     *
     * Generated from protobuf field <code>optional string Unit = 7;</code>
     */
    protected $Unit = null;
    /**
     * вид упаковки товара // ВидУпак
     *
     * Generated from protobuf field <code>optional string PackageType = 8;</code>
     */
    protected $PackageType = null;
    /**
     * количество мест в 1 упаковке // Место;
     *
     * Generated from protobuf field <code>optional string QuantityInPack = 9;</code>
     */
    protected $QuantityInPack = null;
    /**
     * количество единиц товара // КолМест;
     *
     * Generated from protobuf field <code>optional string Quantity = 10;</code>
     */
    protected $Quantity = null;
    /**
     * масса брутто // брутто
     *
     * Generated from protobuf field <code>optional string Gross = 11;</code>
     */
    protected $Gross = null;
    /**
     * масса нетто, количество передано (отпущено) // НеттоПередано
     *
     * Generated from protobuf field <code>optional string Net = 12;</code>
     */
    protected $Net = null;
    /**
     * Количество надлежит отпустить // НадлОтп
     *
     * Generated from protobuf field <code>optional string ItemToRelease = 13;</code>
     */
    protected $ItemToRelease = null;
    /**
     * цена за единицу товара // ЦенаТов
     *
     * Generated from protobuf field <code>optional string Price = 14;</code>
     */
    protected $Price = null;
    /**
     * сумма без учета налога // СтБезНДС
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 15;</code>
     */
    protected $SubtotalWithVatExcluded = null;
    /**
     * ставка налога // НалСт
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];</code>
     */
    protected $TaxRate = null;
    /**
     * сумма налога // СумНДС
     *
     * Generated from protobuf field <code>optional string Vat = 17;</code>
     */
    protected $Vat = null;
    /**
     * сумма всего // СтУчНДС
     *
     * Generated from protobuf field <code>optional string Subtotal = 18;</code>
     */
    protected $Subtotal = null;
    /**
     * Корреспондирующие счета: дебет // КорСчДеб
     *
     * Generated from protobuf field <code>optional string ItemAccountDebit = 19;</code>
     */
    protected $ItemAccountDebit = null;
    /**
     * Корреспондирующие счета: кредит // КорСчКред
     *
     * Generated from protobuf field <code>optional string ItemAccountCredit = 20;</code>
     */
    protected $ItemAccountCredit = null;
    /**
     * Информационное поле документа // ИнфПолФХЖ2
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;</code>
     */
    private $AdditionalInfos;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Product
     *           наименование товара // НаимТов
     *     @type string $Feature
     *           характеристика товара // ХарактерТов
     *     @type string $Sort
     *           сорт товара // СортТов
     *     @type string $VendorCode
     *           артикул товара
     *     @type string $ProductCode
     *           Код товара // КодТов
     *     @type string $UnitName
     *           наименование единицы измерения товара. Пользователь заполняет, если ОКЕИ_Тов=’0000’// НаимЕдИзм
     *     @type string $Unit
     *           единицы измерения товара (код) // ОКЕИ_Тов
     *     @type string $PackageType
     *           вид упаковки товара // ВидУпак
     *     @type string $QuantityInPack
     *           количество мест в 1 упаковке // Место;
     *     @type string $Quantity
     *           количество единиц товара // КолМест;
     *     @type string $Gross
     *           масса брутто // брутто
     *     @type string $Net
     *           масса нетто, количество передано (отпущено) // НеттоПередано
     *     @type string $ItemToRelease
     *           Количество надлежит отпустить // НадлОтп
     *     @type string $Price
     *           цена за единицу товара // ЦенаТов
     *     @type string $SubtotalWithVatExcluded
     *           сумма без учета налога // СтБезНДС
     *     @type int $TaxRate
     *           ставка налога // НалСт
     *     @type string $Vat
     *           сумма налога // СумНДС
     *     @type string $Subtotal
     *           сумма всего // СтУчНДС
     *     @type string $ItemAccountDebit
     *           Корреспондирующие счета: дебет // КорСчДеб
     *     @type string $ItemAccountCredit
     *           Корреспондирующие счета: кредит // КорСчКред
     *     @type array<\Diadoc\Api\Proto\Invoicing\AdditionalInfo>|\Google\Protobuf\Internal\RepeatedField $AdditionalInfos
     *           Информационное поле документа // ИнфПолФХЖ2
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\TovTorgInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * наименование товара // НаимТов
     *
     * Generated from protobuf field <code>optional string Product = 1;</code>
     * @return string
     */
    public function getProduct()
    {
        return isset($this->Product) ? $this->Product : '';
    }

    public function hasProduct()
    {
        return isset($this->Product);
    }

    public function clearProduct()
    {
        unset($this->Product);
    }

    /**
     * наименование товара // НаимТов
     *
     * Generated from protobuf field <code>optional string Product = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProduct($var)
    {
        GPBUtil::checkString($var, True);
        $this->Product = $var;

        return $this;
    }

    /**
     * характеристика товара // ХарактерТов
     *
     * Generated from protobuf field <code>optional string Feature = 2;</code>
     * @return string
     */
    public function getFeature()
    {
        return isset($this->Feature) ? $this->Feature : '';
    }

    public function hasFeature()
    {
        return isset($this->Feature);
    }

    public function clearFeature()
    {
        unset($this->Feature);
    }

    /**
     * характеристика товара // ХарактерТов
     *
     * Generated from protobuf field <code>optional string Feature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFeature($var)
    {
        GPBUtil::checkString($var, True);
        $this->Feature = $var;

        return $this;
    }

    /**
     * сорт товара // СортТов
     *
     * Generated from protobuf field <code>optional string Sort = 3;</code>
     * @return string
     */
    public function getSort()
    {
        return isset($this->Sort) ? $this->Sort : '';
    }

    public function hasSort()
    {
        return isset($this->Sort);
    }

    public function clearSort()
    {
        unset($this->Sort);
    }

    /**
     * сорт товара // СортТов
     *
     * Generated from protobuf field <code>optional string Sort = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, True);
        $this->Sort = $var;

        return $this;
    }

    /**
     * артикул товара
     *
     * Generated from protobuf field <code>optional string VendorCode = 4;</code>
     * @return string
     */
    public function getVendorCode()
    {
        return isset($this->VendorCode) ? $this->VendorCode : '';
    }

    public function hasVendorCode()
    {
        return isset($this->VendorCode);
    }

    public function clearVendorCode()
    {
        unset($this->VendorCode);
    }

    /**
     * артикул товара
     *
     * Generated from protobuf field <code>optional string VendorCode = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setVendorCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->VendorCode = $var;

        return $this;
    }

    /**
     * Код товара // КодТов
     *
     * Generated from protobuf field <code>optional string ProductCode = 5;</code>
     * @return string
     */
    public function getProductCode()
    {
        return isset($this->ProductCode) ? $this->ProductCode : '';
    }

    public function hasProductCode()
    {
        return isset($this->ProductCode);
    }

    public function clearProductCode()
    {
        unset($this->ProductCode);
    }

    /**
     * Код товара // КодТов
     *
     * Generated from protobuf field <code>optional string ProductCode = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setProductCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->ProductCode = $var;

        return $this;
    }

    /**
     * наименование единицы измерения товара. Пользователь заполняет, если ОКЕИ_Тов=’0000’// НаимЕдИзм
     *
     * Generated from protobuf field <code>optional string UnitName = 6;</code>
     * @return string
     */
    public function getUnitName()
    {
        return isset($this->UnitName) ? $this->UnitName : '';
    }

    public function hasUnitName()
    {
        return isset($this->UnitName);
    }

    public function clearUnitName()
    {
        unset($this->UnitName);
    }

    /**
     * наименование единицы измерения товара. Пользователь заполняет, если ОКЕИ_Тов=’0000’// НаимЕдИзм
     *
     * Generated from protobuf field <code>optional string UnitName = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setUnitName($var)
    {
        GPBUtil::checkString($var, True);
        $this->UnitName = $var;

        return $this;
    }

    /**
     * единицы измерения товара (код) // ОКЕИ_Тов
     *
     * Generated from protobuf field <code>optional string Unit = 7;</code>
     * @return string
     */
    public function getUnit()
    {
        return isset($this->Unit) ? $this->Unit : '';
    }

    public function hasUnit()
    {
        return isset($this->Unit);
    }

    public function clearUnit()
    {
        unset($this->Unit);
    }

    /**
     * единицы измерения товара (код) // ОКЕИ_Тов
     *
     * Generated from protobuf field <code>optional string Unit = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkString($var, True);
        $this->Unit = $var;

        return $this;
    }

    /**
     * вид упаковки товара // ВидУпак
     *
     * Generated from protobuf field <code>optional string PackageType = 8;</code>
     * @return string
     */
    public function getPackageType()
    {
        return isset($this->PackageType) ? $this->PackageType : '';
    }

    public function hasPackageType()
    {
        return isset($this->PackageType);
    }

    public function clearPackageType()
    {
        unset($this->PackageType);
    }

    /**
     * вид упаковки товара // ВидУпак
     *
     * Generated from protobuf field <code>optional string PackageType = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setPackageType($var)
    {
        GPBUtil::checkString($var, True);
        $this->PackageType = $var;

        return $this;
    }

    /**
     * количество мест в 1 упаковке // Место;
     *
     * Generated from protobuf field <code>optional string QuantityInPack = 9;</code>
     * @return string
     */
    public function getQuantityInPack()
    {
        return isset($this->QuantityInPack) ? $this->QuantityInPack : '';
    }

    public function hasQuantityInPack()
    {
        return isset($this->QuantityInPack);
    }

    public function clearQuantityInPack()
    {
        unset($this->QuantityInPack);
    }

    /**
     * количество мест в 1 упаковке // Место;
     *
     * Generated from protobuf field <code>optional string QuantityInPack = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setQuantityInPack($var)
    {
        GPBUtil::checkString($var, True);
        $this->QuantityInPack = $var;

        return $this;
    }

    /**
     * количество единиц товара // КолМест;
     *
     * Generated from protobuf field <code>optional string Quantity = 10;</code>
     * @return string
     */
    public function getQuantity()
    {
        return isset($this->Quantity) ? $this->Quantity : '';
    }

    public function hasQuantity()
    {
        return isset($this->Quantity);
    }

    public function clearQuantity()
    {
        unset($this->Quantity);
    }

    /**
     * количество единиц товара // КолМест;
     *
     * Generated from protobuf field <code>optional string Quantity = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkString($var, True);
        $this->Quantity = $var;

        return $this;
    }

    /**
     * масса брутто // брутто
     *
     * Generated from protobuf field <code>optional string Gross = 11;</code>
     * @return string
     */
    public function getGross()
    {
        return isset($this->Gross) ? $this->Gross : '';
    }

    public function hasGross()
    {
        return isset($this->Gross);
    }

    public function clearGross()
    {
        unset($this->Gross);
    }

    /**
     * масса брутто // брутто
     *
     * Generated from protobuf field <code>optional string Gross = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setGross($var)
    {
        GPBUtil::checkString($var, True);
        $this->Gross = $var;

        return $this;
    }

    /**
     * масса нетто, количество передано (отпущено) // НеттоПередано
     *
     * Generated from protobuf field <code>optional string Net = 12;</code>
     * @return string
     */
    public function getNet()
    {
        return isset($this->Net) ? $this->Net : '';
    }

    public function hasNet()
    {
        return isset($this->Net);
    }

    public function clearNet()
    {
        unset($this->Net);
    }

    /**
     * масса нетто, количество передано (отпущено) // НеттоПередано
     *
     * Generated from protobuf field <code>optional string Net = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setNet($var)
    {
        GPBUtil::checkString($var, True);
        $this->Net = $var;

        return $this;
    }

    /**
     * Количество надлежит отпустить // НадлОтп
     *
     * Generated from protobuf field <code>optional string ItemToRelease = 13;</code>
     * @return string
     */
    public function getItemToRelease()
    {
        return isset($this->ItemToRelease) ? $this->ItemToRelease : '';
    }

    public function hasItemToRelease()
    {
        return isset($this->ItemToRelease);
    }

    public function clearItemToRelease()
    {
        unset($this->ItemToRelease);
    }

    /**
     * Количество надлежит отпустить // НадлОтп
     *
     * Generated from protobuf field <code>optional string ItemToRelease = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setItemToRelease($var)
    {
        GPBUtil::checkString($var, True);
        $this->ItemToRelease = $var;

        return $this;
    }

    /**
     * цена за единицу товара // ЦенаТов
     *
     * Generated from protobuf field <code>optional string Price = 14;</code>
     * @return string
     */
    public function getPrice()
    {
        return isset($this->Price) ? $this->Price : '';
    }

    public function hasPrice()
    {
        return isset($this->Price);
    }

    public function clearPrice()
    {
        unset($this->Price);
    }

    /**
     * цена за единицу товара // ЦенаТов
     *
     * Generated from protobuf field <code>optional string Price = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkString($var, True);
        $this->Price = $var;

        return $this;
    }

    /**
     * сумма без учета налога // СтБезНДС
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 15;</code>
     * @return string
     */
    public function getSubtotalWithVatExcluded()
    {
        return isset($this->SubtotalWithVatExcluded) ? $this->SubtotalWithVatExcluded : '';
    }

    public function hasSubtotalWithVatExcluded()
    {
        return isset($this->SubtotalWithVatExcluded);
    }

    public function clearSubtotalWithVatExcluded()
    {
        unset($this->SubtotalWithVatExcluded);
    }

    /**
     * сумма без учета налога // СтБезНДС
     *
     * Generated from protobuf field <code>optional string SubtotalWithVatExcluded = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotalWithVatExcluded($var)
    {
        GPBUtil::checkString($var, True);
        $this->SubtotalWithVatExcluded = $var;

        return $this;
    }

    /**
     * ставка налога // НалСт
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];</code>
     * @return int
     */
    public function getTaxRate()
    {
        return isset($this->TaxRate) ? $this->TaxRate : 0;
    }

    public function hasTaxRate()
    {
        return isset($this->TaxRate);
    }

    public function clearTaxRate()
    {
        unset($this->TaxRate);
    }

    /**
     * ставка налога // НалСт
     *
     * Generated from protobuf field <code>optional .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 16 [default = Percent_18];</code>
     * @param int $var
     * @return $this
     */
    public function setTaxRate($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Api\Proto\Invoicing\TaxRate::class);
        $this->TaxRate = $var;

        return $this;
    }

    /**
     * сумма налога // СумНДС
     *
     * Generated from protobuf field <code>optional string Vat = 17;</code>
     * @return string
     */
    public function getVat()
    {
        return isset($this->Vat) ? $this->Vat : '';
    }

    public function hasVat()
    {
        return isset($this->Vat);
    }

    public function clearVat()
    {
        unset($this->Vat);
    }

    /**
     * сумма налога // СумНДС
     *
     * Generated from protobuf field <code>optional string Vat = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setVat($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vat = $var;

        return $this;
    }

    /**
     * сумма всего // СтУчНДС
     *
     * Generated from protobuf field <code>optional string Subtotal = 18;</code>
     * @return string
     */
    public function getSubtotal()
    {
        return isset($this->Subtotal) ? $this->Subtotal : '';
    }

    public function hasSubtotal()
    {
        return isset($this->Subtotal);
    }

    public function clearSubtotal()
    {
        unset($this->Subtotal);
    }

    /**
     * сумма всего // СтУчНДС
     *
     * Generated from protobuf field <code>optional string Subtotal = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotal($var)
    {
        GPBUtil::checkString($var, True);
        $this->Subtotal = $var;

        return $this;
    }

    /**
     * Корреспондирующие счета: дебет // КорСчДеб
     *
     * Generated from protobuf field <code>optional string ItemAccountDebit = 19;</code>
     * @return string
     */
    public function getItemAccountDebit()
    {
        return isset($this->ItemAccountDebit) ? $this->ItemAccountDebit : '';
    }

    public function hasItemAccountDebit()
    {
        return isset($this->ItemAccountDebit);
    }

    public function clearItemAccountDebit()
    {
        unset($this->ItemAccountDebit);
    }

    /**
     * Корреспондирующие счета: дебет // КорСчДеб
     *
     * Generated from protobuf field <code>optional string ItemAccountDebit = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setItemAccountDebit($var)
    {
        GPBUtil::checkString($var, True);
        $this->ItemAccountDebit = $var;

        return $this;
    }

    /**
     * Корреспондирующие счета: кредит // КорСчКред
     *
     * Generated from protobuf field <code>optional string ItemAccountCredit = 20;</code>
     * @return string
     */
    public function getItemAccountCredit()
    {
        return isset($this->ItemAccountCredit) ? $this->ItemAccountCredit : '';
    }

    public function hasItemAccountCredit()
    {
        return isset($this->ItemAccountCredit);
    }

    public function clearItemAccountCredit()
    {
        unset($this->ItemAccountCredit);
    }

    /**
     * Корреспондирующие счета: кредит // КорСчКред
     *
     * Generated from protobuf field <code>optional string ItemAccountCredit = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setItemAccountCredit($var)
    {
        GPBUtil::checkString($var, True);
        $this->ItemAccountCredit = $var;

        return $this;
    }

    /**
     * Информационное поле документа // ИнфПолФХЖ2
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAdditionalInfos()
    {
        return $this->AdditionalInfos;
    }

    /**
     * Информационное поле документа // ИнфПолФХЖ2
     *
     * Generated from protobuf field <code>repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfos = 21;</code>
     * @param array<\Diadoc\Api\Proto\Invoicing\AdditionalInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAdditionalInfos($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Diadoc\Api\Proto\Invoicing\AdditionalInfo::class);
        $this->AdditionalInfos = $arr;

        return $this;
    }

}

